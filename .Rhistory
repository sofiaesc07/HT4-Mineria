rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - test$SalePrice) ^ 2)
p2 <- sum((test$SalePrice - mean(test$SalePrice)) ^ 2)
p3 <- (p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - test$SalePrice) ^ 2)
p2 <- sum((test$SalePrice - mean(test$SalePrice)) ^ 2)
p3 <- 1-(p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = datos2)
p1 <- sum((pred1 - test$SalePrice) ^ 2)
p2 <- sum((test$SalePrice - mean(test$SalePrice)) ^ 2)
p3 <- 1-(p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = test1)
p1 <- sum((pred1 - test1$SalePrice) ^ 2)
p2 <- sum((test1$SalePrice - mean(test1$SalePrice)) ^ 2)
p3 <- 1-(p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p3 <- 1-(p1 / p2)
p3
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p3 <- 1-(p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p3 <- -1+(p1 / p2)
p3
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p3 <- -1+(p1 / p2)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
pred1 <- predict(arbol1, data = training1)
p1 <- sum((pred1 - training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p3 <- (p1 / p2)-1
p3
pred1
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p2 <- sum((pred1 - training1$SalePrice) ^ 2)
p3 <- (p2 / p1)-1
p3
pred1
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
training2<-datos2[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((training1$SalePrice - mean(training1$SalePrice)) ^ 2)
p2 <- sum((pred1 - training1$SalePrice) ^ 2)
p3 <- (p2 / p1)-1
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
#rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
confusionMatrix(y, pred2)
length(test1$clasification)
nrow(training)
nrow(test)
confusionMatrix(pred2, y)
#y<-test
#test$clasification <- ifelse(test$SalePrice > 214000, "Caras", ifelse(test$SalePrice>163000, "Intemedia", "Economicas"))
y <- test[,"clasification"]
